trigger: none

# pool: default
pool:
  name: default
  demands: agent.name -equals e-zaslavsky

steps:
- script: |
    pwd
  displayName: 'print working directory'

- script: |
    ls -la
  displayName: 'list files'

# - bash: echo Value of Agent.BuildDirectory = $BLA
#   env:
#     BLA: $(Agent.BuildDirectory)
#   displayName: 'Agent.BuildDirectory = $(Agent.BuildDirectory)'
- bash: echo Value of Agent.BuildDirectory = $(Agent.BuildDirectory)
  displayName: 'Agent.BuildDirectory = $(Agent.BuildDirectory)'

- bash: echo Value of Build.SourcesDirectory = $(Build.SourcesDirectory)
  displayName: 'Build.SourcesDirectory = $(Build.SourcesDirectory)'

- bash: echo Value of Build.BinariesDirectory = $(Build.BinariesDirectory)
  displayName: 'Build.BinariesDirectory = $(Build.BinariesDirectory)'

- bash: echo Value of Build.ArtifactStagingDirectory = $(Build.ArtifactStagingDirectory)
  displayName: 'Build.ArtifactStagingDirectory = $(Build.ArtifactStagingDirectory)'

- bash: echo Value of Build.TestResultsDirectory = $(Build.TestResultsDirectory)
  displayName: 'Build.TestResultsDirectory = $(Build.TestResultsDirectory)'

- bash: echo Value of Build.DefinitionName = $(Build.DefinitionName)
  displayName: 'Build.DefinitionName = $(Build.DefinitionName)'

- bash: echo Value of Build.DefinitionVersion = $(Build.DefinitionVersion)
  displayName: 'Build.DefinitionVersion = $(Build.DefinitionVersion)'

- bash: echo Value of Build.BuildId = $(Build.BuildId)
  displayName: 'Build.BuildId = $(Build.BuildId)'

- bash: echo Value of Build.BuildNumber = $(Build.BuildNumber)
  displayName: 'Build.BuildNumber = $(Build.BuildNumber)'