name: Enforce Required Reviews in Release Mode

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]  # Включаем необходимые события для обработки PR
  pull_request_review:
    types: [submitted]  # Обработка событий ревью

jobs:
  enforce-reviews:
    runs-on: ubuntu-latest

    env:
      RELEASE_REVIEWER: ThirdFimmiUser  # Define the user as a variable

    steps:
      - name: Ensure Release Reviewer is Assigned and Approved
        if: env.RELEASE_MODE == 'true'
        run: |
          # Определяем, какое событие вызвало воркфлоу
          EVENT_NAME="${{ github.event_name }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # Логика для событий pull_request
          if [[ "$EVENT_NAME" == "pull_request" ]]; then
            echo "Handling pull_request event..."

            # Получаем список назначенных рецензентов
            ASSIGNED_REVIEWERS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/requested_reviewers)

            # Проверяем, назначен ли RELEASE_REVIEWER
            if [[ "$ASSIGNED_REVIEWERS" == *"$RELEASE_REVIEWER"* ]]; then
              echo "$RELEASE_REVIEWER is already a reviewer."
            else
              echo "$RELEASE_REVIEWER is not a reviewer yet, adding now."

              # Добавляем рецензента
              curl -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/requested_reviewers \
                -d "{\"reviewers\":[\"$RELEASE_REVIEWER\"]}"

              # Короткая пауза для завершения добавления рецензента
              sleep 3
            fi
          fi

          # Логика для проверки, одобрен ли PR, применяется к обоим событиям
          echo "Checking if $RELEASE_REVIEWER has approved the PR..."
          REVIEWS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews)

          # Проверяем, есть ли аппрув от RELEASE_REVIEWER
          if [[ "$REVIEWS" == *"$RELEASE_REVIEWER"* && "$REVIEWS" == *"APPROVED"* ]]; then
            echo "$RELEASE_REVIEWER has approved the PR."
          else
            echo "$RELEASE_REVIEWER has not approved the PR."
            echo "Approval from $RELEASE_REVIEWER is required before merging."
            exit 1  # Фейлим чек, если аппрува нет
          fi
