name: Enforce Required Reviews in Release Mode

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]  # Trigger on PR events
  pull_request_review:
    types: [submitted]  # Trigger on review submission

jobs:
  enforce-reviews:
    runs-on: ubuntu-latest

    env:
      RELEASE_REVIEWER: ThirdFimmiUser  # Define the reviewer

    steps:
      - name: Ensure Release Reviewer is Assigned
        if: ${{ vars.RELEASE_MODE == 'true' && github.event_name == 'pull_request' }}
        run: |
          set -x
          echo "env.RELEASE_MODE = ${{ vars.RELEASE_MODE }}"
          echo "Release mode enabled: ${{ vars.RELEASE_MODE == 'true' }}"
          
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # Get the list of assigned reviewers
          ASSIGNED_REVIEWERS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/requested_reviewers)

          # Check if the RELEASE_REVIEWER is already assigned
          if [[ "$ASSIGNED_REVIEWERS" == *"$RELEASE_REVIEWER"* ]]; then
            echo "$RELEASE_REVIEWER is already a reviewer."
          else
            echo "$RELEASE_REVIEWER is not a reviewer yet, adding now."

            # Add the reviewer
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/requested_reviewers \
              -d "{\"reviewers\":[\"$RELEASE_REVIEWER\"]}"

            # Short delay to ensure the reviewer is registered
            sleep 3

      - name: Check if Reviewer Approved
        if: ${{ vars.RELEASE_MODE == 'true' && github.event_name == 'pull_request_review' }}
        run: |
          set -x
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # Check if the PR has been approved by the RELEASE_REVIEWER
          echo "Checking if $RELEASE_REVIEWER has approved the PR..."
          REVIEWS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews)

          # Verify if the REVIEWER has approved the PR
          if [[ "$REVIEWS" == *"$RELEASE_REVIEWER"* && "$REVIEWS" == *"APPROVED"* ]]; then
            echo "$RELEASE_REVIEWER has approved the PR."
          else
            echo "$RELEASE_REVIEWER has not approved the PR."
            echo "Approval from $RELEASE_REVIEWER is required before merging."
            exit 1  # Fail the check if approval is missing
