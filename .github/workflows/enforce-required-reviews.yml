name: Enforce Required Reviews in Release Mode

# on:
#   pull_request:
#     types: [assigned, unassigned, labeled, unlabeled, edited, closed, reopened, synchronize, ready_for_review, converted_to_draft, review_requested, review_request_removed]
#   pull_request_review:
#     types: [submitted]

jobs:
  enforce-reviews:
    runs-on: ubuntu-latest

    env:
      RELEASE_REVIEWER: ThirdFimmiUser  # Define the user as a variable

    steps:
      - name: Check if the user is already a reviewer and add if necessary
        if: ${{ vars.RELEASE_MODE == 'true' }}
        run: |
          # Get the list of assigned reviewers
          ASSIGNED_REVIEWERS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers)

          # Check if the user is assigned using if / else
          if [[ "$ASSIGNED_REVIEWERS" == *"$RELEASE_REVIEWER"* ]]; then
            echo "$RELEASE_REVIEWER is already a reviewer, no need to add."
          else
            echo "$RELEASE_REVIEWER is not a reviewer yet, adding now."

            # Add the reviewer user using curl
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers \
              -d "{\"reviewers\":[\"$RELEASE_REVIEWER\"]}"

            # Adding a short delay to ensure the reviewer is registered in the system
            sleep 3
          fi

      - name: Check if the reviewer has approved the PR
        if: ${{ vars.RELEASE_MODE == 'true' }}
        run: |
          # Get the review statuses for the PR
          REVIEWS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews)

          # Check if the user has approved the PR
          if [[ "$REVIEWS" == *"$RELEASE_REVIEWER"* && "$REVIEWS" == *"APPROVED"* ]]; then
            echo "$RELEASE_REVIEWER has approved the PR"
          else
            echo "$RELEASE_REVIEWER has not approved the PR"
            echo "$RELEASE_REVIEWER approval is required since the release is kickstarted"
            exit 1  # Fail the check if approval is missing
          fi
