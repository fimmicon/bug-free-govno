name: Enforce Required Reviews in Release Mode

on:
  pull_request:
    types: [opened, synchronize, review_requested, review_submitted]

jobs:
  enforce-reviews:
    runs-on: ubuntu-latest

    env:
      RELEASE_REVIEWER: ThirdFimmiuser  # Define the user as a variable

    steps:
      - name: Check release mode and add reviewer
        if: env.RELEASE_MODE == 'true'
        run: |
          echo "Release mode is active, assigning $RELEASE_REVIEWER"

          # Add the reviewer user using curl
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers \
            -d "{\"reviewers\":[\"$RELEASE_REVIEWER\"]}"

      - name: Check if the user has approved the PR
        if: env.RELEASE_MODE == 'true'
        run: |
          # Get the list of assigned reviewers
          ASSIGNED_REVIEWERS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers)

          # Check if the user is assigned
          if echo "$ASSIGNED_REVIEWERS" | grep -q "$RELEASE_REVIEWER"; then
            echo "$RELEASE_REVIEWER is assigned"

            # Get the review statuses for the PR
            REVIEWS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews)

            # Check if the user has approved the PR
            if echo "$REVIEWS" | grep -q '"state": "APPROVED"' | grep -q "$RELEASE_REVIEWER"; then
              echo "$RELEASE_REVIEWER has approved the PR"
            else
              echo "$RELEASE_REVIEWER has not approved the PR"
              exit 1  # Fail the check if approval is missing
            fi
          else
            echo "$RELEASE_REVIEWER is not assigned, skipping check"
          fi
